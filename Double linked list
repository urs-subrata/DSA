#include<stdio.h>
#include<stdlib.h>
struct node{
    int data;
    struct node*right,*left;
};
int d,ch;
void append(struct node**q){
    struct node*temp,*r;
    printf("Enter the data:");
    scanf("%d",&d);
    if(*q==NULL){
        temp=(struct node*)malloc(sizeof(struct node));
        temp->data=d;
        temp->right=NULL;
        temp->left=NULL;
        (*q)=temp;
    }
    else{
        r=*q;
        while(r->right!=NULL){
            r=r->right;
        }
        temp=(struct node*)malloc(sizeof(struct node));
        temp->data=d;
        temp->right=NULL;
        temp->left=r;
        r->right=temp;
    }
}
void display(struct node*q){
    struct node*temp=q;
    while(temp!=NULL){
        printf("%d--",temp->data);
        temp=temp->right;
    }
}
void insert_at_begining(struct node**q){
    struct node*temp,*r;
    temp=(struct node*)malloc(sizeof(struct node));
    printf("enter th e data:");
    scanf("%d",&d);
    temp->data=d;
    temp->right=NULL;
    temp->left=NULL;
    r=*q;
    while(r->right!=NULL){
        r=r->right;
    }
    temp->right=*q;
    r->left=temp;
    *q=temp;
}
void insert_at_end(struct node**q){
    struct node*temp,*r;
    printf("Enter thr data:");
    scanf("%d",&d);
    temp=(struct node*)malloc(sizeof(struct node));
    temp->data=d;
    temp->left=NULL;
    temp->right=NULL;
    r=*q;
    while (r->right!=NULL)
    {
        r=r->right;
    }
    r->right=temp;
    temp->left=r;
    temp->right=NULL;
}
void insert_at_anyposition(struct node**q){
    int d,i=1,loc;
    struct node*temp,*r;
    r=*q;
    printf("enter the location:");
    scanf("%d",&loc);
    printf("enter the data:");
    scanf("%d",&d);
    temp=(struct node*)malloc(sizeof(struct node));
    temp->data=d;
    temp->right=NULL;
    temp->left=NULL;
    while(loc!=i+1){
        r=r->right;
        i++;
    }
    temp->right=r->right;
    r->right=temp;
    r->left=temp;
    (temp->right)->left=temp;
}
void delete_at_first(struct node** q) {
    struct node* temp = *q;
    *q = temp->right; // Update the head pointer
    temp->right = NULL;
    temp->left=NULL;
    free(temp);
}
void delete_at_end(struct node**q){
    struct node *temp,*r;
    r=*q;
    while(r->right!=NULL){
        r=r->right;
    }
    if(r==*q){
        *q=NULL;
    }
    else{
        r->left->right=NULL;
    }
    free(r);
}
void delete_at_anyposition(struct node**q){
    int loc,i=1;
    struct node*r;
    printf("enter the location:");
    scanf("%d",&loc);
    r=*q;
     for(i=1;i<=loc-1;i++){
        r=r->right;
    }
    (r->left)->right=r->right;
    (r->right)->left=r->left;
    free(r);

}
int main(){
    int ch;
    struct node*ptr=NULL;
    while(1){
        printf("Enter the choice:");
        scanf("%d",&ch);
        switch (ch)
        {
        case 1: append(&ptr);
        break;
        case 2:display(ptr);
        break;
        case 3: insert_at_begining(&ptr);
        break;
        case 4: insert_at_end(&ptr);
        break;
        case 5: insert_at_anyposition(&ptr);
        break;
        case 6: delete_at_first(&ptr);
        break;
        case 7: delete_at_end(&ptr);
        break;
        case 8: delete_at_anyposition(&ptr);
        break;
        default:exit(1);
        }
    }
    return 0;
}

#include<stdio.h>
#include<stdlib.h>
struct node{
    int data;
    struct node*link;
};
int d;
void append(struct node**q){
    int d;
    struct node*temp,*r;
    printf("enter the data:");
    scanf("%d",&d);
    if(*q==NULL){
        temp=(struct node*)malloc(sizeof(struct node));
        temp->data=d;
        (*q)=temp;
        temp->link=*q;
    }
    else{
        r=*q;
        while(r->link!=*q){
            r=r->link;
        }
        temp=(struct node*)malloc(sizeof(struct node));
        temp->data=d;
        temp->link=r->link;
        r->link=temp;
    }
}
void display(struct node*q){
    struct node*temp=q;
    do{
        printf("%d--",temp->data);
        temp=temp->link;
    }while(temp!=q);
}
void insert_at_begining(struct node**q){
    struct node*temp,*r;
    int d;
    printf("enter the data:");
    scanf("%d",&d);
    temp=(struct node*)malloc(sizeof(struct node));
    temp->data=d;
    temp->link=*q;
    r=*q;
    while(r->link!=*q){
        r=r->link;
    }
    (*q)=temp;
    r->link=*q;
}
void insert_at_anyposition(struct node**q){
    int loc,i=1,n;
    struct node*temp,*r;
    temp=(struct node*)malloc(sizeof(struct node));
    printf("Enter the data:");
    scanf("%d",&n);
    printf("enter the location:");
    scanf("%d",&loc);
    r=*q;
    while(loc!=i+1){
        r=r->link;
        i++;
    }
    temp->data=n;
    temp->link=r->link;
    r->link=temp;
}
void insert_at_end(struct node**q){
    struct node*temp,*r;
    temp=(struct node*)malloc(sizeof(struct node));
    printf("enter the data:");
    scanf("%d",&d);
    temp->data=d;
    if(*q==NULL){
        temp->link=temp;
        *q=temp;
    }
    else{
        r=*q;
        while(r->link!=*q){
            r=r->link;
        }
        r->link=temp;
        temp->link=*q;
    }
}
void delete_at_begining(struct node**q){
    struct node*temp,*r;
    r=*q;
    while(r->link!=*q){
        r=r->link;
    }
    temp=*q;
    *q=temp->link;
    r->link=*q;
    free(temp);
}
void delete_at_end(struct node**q){
    struct node*temp,*r;
    r=*q;
    while(r->link!=*q){
        r=r->link;
    }
    temp=r->link;
    r->link=*q;
    free(temp);
    temp=NULL;
}
void delete_at_anyposition(struct node**q){
    struct node*temp,*r;
    int loc,i=1;
    printf("Enter the location:");
    scanf("%d",&loc);
    r=*q;
    while(loc!=i+1){
        r=r->link;
        i++;
    }
    temp=r->link;
    r->link=temp->link;
    free(temp);
    temp=NULL;
}
int main(){
    int ch;
    struct node*ptr=NULL;
    while(1){
        printf("Enter the choice:");
        scanf("%d",&ch);
        switch (ch)
        {
        case 1: append(&ptr);
        break;
        case 2:display(ptr);
        break;
        case 3: insert_at_begining(&ptr);
        break;
        case 4: insert_at_anyposition(&ptr);
        break; 
        case 5: delete_at_begining(&ptr);
        break;
        case 6: delete_at_end(&ptr);
        break;
        case 7: delete_at_anyposition(&ptr);
        break;
        default:exit(1);
        }
    }
    return 0;
}
